name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/docker-build-push.yml'

jobs:
  test:
    outputs:
      status: ${{ steps.test.conclusion }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: install deps
        run: pip install -r requirements.txt

      - name: install pytest
        run: pip install pytest pytest-cov

      - id: test
        name: test
        run: pytest --cov --cov-branch --cov-report=xml tests

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: test
    if: steps.test.conclusion == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Read version file
        id: version
        run: |
          if [ -f .version ]; then
            echo "VERSION=$(cat .version)" >> $GITHUB_OUTPUT
          else
            echo "VERSION=latest" >> $GITHUB_OUTPUT
            echo "Warning: .version file not found, using 'latest' as default"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract repository name
        id: repo
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.repo.outputs.REPO_NAME }}:${{ steps.version.outputs.VERSION }}
            ghcr.io/${{ steps.repo.outputs.REPO_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
